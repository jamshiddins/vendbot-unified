version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - static_volume:/app/static
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ../../backend
      dockerfile: ../deploy/production/backend.dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: redis://redis:6379
      BOT_TOKEN: ${BOT_TOKEN}
      SECRET_KEY: ${SECRET_KEY}
      ENVIRONMENT: production
    volumes:
      - uploads_volume:/app/uploads
      - logs_volume:/app/logs
    depends_on:
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: always

  backup:
    image: postgres:16-alpine
    environment:
      PGPASSWORD: ${DB_PASSWORD}
    volumes:
      - ./backup:/backup
    command: |
      sh -c 'while true; do
        pg_dump -h ${DB_HOST} -U ${DB_USER} -d ${DB_NAME} > /backup/vendbot_$$(date +%Y%m%d_%H%M%S).sql
        find /backup -name "*.sql" -mtime +7 -delete
        sleep 86400
      done'
    restart: always

volumes:
  redis_data:
  uploads_volume:
  logs_volume:
  static_volume: