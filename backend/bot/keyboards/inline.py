from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Optional
from db.models.asset import Asset, AssetType
from db.models.ingredient import Ingredient

def get_hoppers_keyboard(hoppers: List[Asset]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –±—É–Ω–∫–µ—Ä–∞"""
    builder = InlineKeyboardBuilder()
    
    for hopper in hoppers:
        builder.button(
            text=f"üì¶ {hopper.name} ({hopper.inventory_number})",
            callback_data=f"hopper:{hopper.id}"
        )
    
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    builder.adjust(1)
    
    return builder.as_markup()

def get_ingredients_keyboard(ingredients: List[Ingredient]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞"""
    builder = InlineKeyboardBuilder()
    
    for ingredient in ingredients:
        text = f"{ingredient.name} ({ingredient.current_stock:.1f} {ingredient.unit})"
        builder.button(
            text=text,
            callback_data=f"ingredient:{ingredient.id}"
        )
    
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    builder.adjust(1)
    
    return builder.as_markup()

def get_machines_keyboard(machines: List[Asset]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–∞—à–∏–Ω—ã"""
    builder = InlineKeyboardBuilder()
    
    for machine in machines:
        builder.button(
            text=f"‚òï {machine.name} - {machine.location or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}",
            callback_data=f"machine:{machine.id}"
        )
    
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    builder.adjust(1)
    
    return builder.as_markup()

def get_confirm_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm:yes")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="confirm:no")
    builder.adjust(2)
    
    return builder.as_markup()

def get_skip_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —à–∞–≥–∞"""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    builder.adjust(2)
    
    return builder.as_markup()