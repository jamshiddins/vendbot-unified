from aiogram import Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
from db.database import AsyncSessionLocal
from core.services.user_service import UserService
from bot.keyboards.main_menu import get_main_menu

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async with AsyncSessionLocal() as db:
        service = UserService(db)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await service.get_user_by_telegram(message.from_user.id)
        
        if not user:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            from api.schemas import UserCreate
            user_data = UserCreate(
                telegram_id=message.from_user.id,
                username=message.from_user.username,
                full_name=message.from_user.full_name
            )
            user = await service.create_user(user_data)
            
            await message.answer(
                f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VendBot!\n\n"
                f"–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫: {user.full_name}\n"
                f"–†–æ–ª—å: {user.role.value}\n\n"
                f"–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ–π —Ä–æ–ª–∏."
            )
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
            keyboard = get_main_menu(user.role)
            await message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.full_name}!\n\n"
                f"–í–∞—à–∞ —Ä–æ–ª—å: {user.role.value}\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=keyboard
            )

@router.message(Command("help"))
async def cmd_help(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üìö **–ü–æ–º–æ—â—å –ø–æ VendBot**

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å

–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–π —Ä–æ–ª–∏ –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:

üë§ **–û–ø–µ—Ä–∞—Ç–æ—Ä**: —Ä–∞–±–æ—Ç–∞ —Å –±—É–Ω–∫–µ—Ä–∞–º–∏ –∏ –º–∞—à–∏–Ω–∞–º–∏
üì¶ **–°–∫–ª–∞–¥**: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∞—Å–∞–º–∏ –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è–º–∏
üöõ **–í–æ–¥–∏—Ç–µ–ª—å**: –º–∞—Ä—à—Ä—É—Ç—ã –∏ –¥–æ—Å—Ç–∞–≤–∫–∏
üëë **–ê–¥–º–∏–Ω**: –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ

–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.
"""
    await message.answer(help_text, parse_mode="Markdown")