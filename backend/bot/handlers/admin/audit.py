from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from aiogram.fsm.context import FSMContext
from pathlib import Path
import subprocess
import asyncio

from db.models.user import UserRole
from bot.filters import RoleFilter

router = Router(name="admin_audit")

@router.message(F.text == "üìä –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞—É–¥–∏—Ç", RoleFilter(UserRole.ADMIN))
async def start_audit(message: Message, state: FSMContext):
    """–ó–∞–ø—É—Å–∫ –∞—É–¥–∏—Ç–∞ —á–µ—Ä–µ–∑ Telegram"""
    await message.answer(
        "üîç –ó–∞–ø—É—Å–∫ –∞—É–¥–∏—Ç–∞...\n"
        "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç."
    )
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—É–¥–∏—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
        process = await asyncio.create_subprocess_exec(
            'python', '-m', 'src.audit.main',
            '--period', '2025-06-01:2025-06-15',
            '--upload-folder', './audit_data/',
            '--output-folder', './audit_reports/',
            stdout=asyncio.subprocess.PIPE,
            stderr=asyncio.subprocess.PIPE
        )
        
        stdout, stderr = await process.communicate()
        
        if process.returncode == 0:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
            report_files = list(Path('./audit_reports/').glob('audit_report_*.xlsx'))
            if report_files:
                latest_report = max(report_files, key=lambda p: p.stat().st_mtime)
                
                await message.answer_document(
                    FSInputFile(latest_report),
                    caption="‚úÖ –ê—É–¥–∏—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
                )
            else:
                await message.answer("‚ö†Ô∏è –ê—É–¥–∏—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –Ω–æ –æ—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        else:
            await message.answer(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞—É–¥–∏—Ç–∞:\n"
                f"```\n{stderr.decode()[-500:]}\n```",
                parse_mode="Markdown"
            )
            
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")